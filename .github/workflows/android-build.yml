name: Android Build

on:
  push:
    branches: [ develop, master ]
  # pull_request:
    # branches: [ develop ]

jobs:
  apk:
    runs-on: ubuntu-latest
    # android 디렉토리 없앰으로 인한 주석 처리
    # env:
    #  working-directory: ./android

    steps:
      # Check Current Branches
      - uses: actions/checkout@v2

      # JDK 설정
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      # Android SDK 설정
      # - name: SetUp Android SDK
      #  uses: android-actions/setup-android@v2

      # Dependency 에 버전 및 릴리즈 메시지 가져오기 working-directory -> 리포지토리 특성상 android 에서 빌드해야 되서 추가함
      - name: Release Version
        id: release
        run: |
          echo ::set-output name=code::$(grep versionCode buildSrc/src/main/java/Dependency.kt | awk '{print $5}')
          echo ::set-output name=name::$(grep versionName buildSrc/src/main/java/Dependency.kt | awk '{print $5}')

      # Tag 명 "" 제거해서 가져오기
      - name: Get Version Name
        id: version_name
        run: echo ::set-output name=val::${{steps.release.outputs.name}}

      - name: Get Version Code
        id: version_code
        run: echo ::set-output name=val::${{steps.release.outputs.code}}

      - name: Print version
        run: echo "Version ${{steps.version_code.outputs.val}}_${{steps.version_name.outputs.val}}"

      # gradlew 권한 획득
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        # working-directory: ${{ env.working-directory }}

      # Android Build Debug: assembleDebug Release: assembleRelease
      - name: Android Build
        run: ./gradlew clean assembleDebug
        # working-directory: ${{ env.working-directory }}

      # Debg Upload Apk
      - name: Debug Apk
        uses: actions/upload-artifact@v2
        with:
          name: Generate Debug Apk
          path: app/build/outputs/apk/debug/til_${{steps.version_code.outputs.val}}_${{steps.version_name.outputs.val}}-debug.apk

